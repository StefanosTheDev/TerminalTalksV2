/* Section Container */
.experienceSection {
  padding: 4rem 2rem;
  background: #000000;
  position: relative;
  overflow: hidden;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    sans-serif;
  color: #ffffff;
  width: 100%;
  min-height: 100vh;
}

/* Background Effects */
.sectionBackground {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 0;
}

/* Multi-layer Grid System - Same as Hero */
.sectionBackground::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(
      rgba(255, 255, 255, 0.03) 1px,
      transparent 1px
    ),
    linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: gridMove 20s linear infinite;
  z-index: 1;
}

/* Secondary grid layer for depth */
.sectionBackground::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(
      rgba(255, 255, 255, 0.01) 1px,
      transparent 1px
    ),
    linear-gradient(90deg, rgba(255, 255, 255, 0.01) 1px, transparent 1px);
  background-size: 20px 20px;
  animation: gridMove 30s linear infinite reverse;
  z-index: 2;
}

.gridPattern {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(
      circle at 20% 80%,
      rgba(255, 255, 255, 0.02) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 80% 20%,
      rgba(255, 255, 255, 0.02) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 40% 40%,
      rgba(255, 255, 255, 0.015) 0%,
      transparent 50%
    );
  animation: heroGlow 8s ease-in-out infinite alternate;
  z-index: 3;
}

/* Floating Particles - Same as Hero */
.particles {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 4;
  pointer-events: none;
}

.particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  animation: float 20s linear infinite;
}

.particle1 {
  top: 15%;
  left: 25%;
  animation-delay: 2s;
  animation-duration: 28s;
}

.particle2 {
  top: 35%;
  left: 75%;
  animation-delay: 7s;
  animation-duration: 32s;
}

.particle3 {
  top: 65%;
  left: 15%;
  animation-delay: 12s;
  animation-duration: 25s;
}

.particle4 {
  top: 85%;
  left: 85%;
  animation-delay: 18s;
  animation-duration: 30s;
}

.particle5 {
  top: 45%;
  left: 50%;
  animation-delay: 5s;
  animation-duration: 26s;
}

@keyframes float {
  0%,
  100% {
    transform: translate(0, 0) scale(0.5);
    opacity: 0;
  }
  10%,
  90% {
    opacity: 1;
  }
  50% {
    transform: translate(100px, -100px) scale(1);
    opacity: 0.8;
  }
}

@keyframes gridMove {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(50px, 50px);
  }
}

@keyframes heroGlow {
  0% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}

/* Container */
.container {
  max-width: 1400px;
  margin: 0 auto;
  position: relative;
  z-index: 10;
}

/* Header */
.header {
  text-align: center;
  margin-bottom: 3rem;
}

.header h2 {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 1rem;
  color: #ffffff;
}

.header p {
  color: #cccccc;
  font-size: 1.1rem;
  max-width: 600px;
  margin: 0 auto;
  line-height: 1.6;
}

/* Category Filter */
.categoryFilter {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-bottom: 3rem;
  flex-wrap: wrap;
}

.categoryBtn {
  padding: 0.5rem 1.5rem;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 25px;
  color: #cccccc;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 500;
  font-size: 0.9rem;
  font-family: inherit;
}

.categoryBtn:hover {
  background: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.3);
  color: #ffffff;
}

.categoryBtn.active {
  background: linear-gradient(135deg, #ffffff, #cccccc);
  color: #000000;
  border-color: #ffffff;
}

/* Carousel */
.lectureCarousel {
  position: relative;
  overflow: hidden;
  margin-bottom: 2rem;
}

.carouselContainer {
  overflow: hidden;
  border-radius: 16px;
  padding: 1rem 0;
}

.carouselTrack {
  display: flex;
  transition: transform 0.5s ease;
  gap: 1.5rem;
  padding: 0 1rem;
}

.carouselBtn {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 50px;
  height: 50px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  color: #ffffff;
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
}

.carouselBtn:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-50%) scale(1.1);
}

.prevBtn {
  left: 1rem;
}

.nextBtn {
  right: 1rem;
}

/* Lecture Cards */
.lectureCard {
  min-width: 320px;
  background: rgba(255, 255, 255, 0.08);
  border: 1px solid rgba(255, 255, 255, 0.15);
  border-radius: 16px;
  padding: 1.5rem;
  transition: all 0.3s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.lectureCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, #ffffff, #cccccc);
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.lectureCard:hover::before,
.lectureCard.active::before {
  transform: scaleX(1);
}

.lectureCard:hover,
.lectureCard.active {
  transform: translateY(-5px);
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.3);
}

/* Card Header */
.lectureHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

/* Tech Badges */
.techBadge {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.3rem 0.8rem;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
}

.techBadge img {
  width: 16px;
  height: 16px;
}

.techBadge.react {
  background: rgba(97, 219, 251, 0.2);
  color: #61dbfb;
}
.techBadge.nodejs {
  background: rgba(104, 160, 99, 0.2);
  color: #68a063;
}
.techBadge.python {
  background: rgba(255, 212, 59, 0.2);
  color: #ffd43b;
}
.techBadge.flutter {
  background: rgba(66, 165, 245, 0.2);
  color: #42a5f5;
}
.techBadge.docker {
  background: rgba(33, 150, 243, 0.2);
  color: #2196f3;
}
.techBadge.vue {
  background: rgba(76, 175, 80, 0.2);
  color: #4caf50;
}

/* Difficulty Badges */
.difficulty {
  padding: 0.2rem 0.6rem;
  border-radius: 12px;
  font-size: 0.7rem;
  font-weight: 600;
  text-transform: uppercase;
}

.difficulty.beginner {
  background: rgba(76, 175, 80, 0.2);
  color: #4caf50;
}
.difficulty.intermediate {
  background: rgba(255, 193, 7, 0.2);
  color: #ffc107;
}
.difficulty.advanced {
  background: rgba(244, 67, 54, 0.2);
  color: #f44336;
}

/* Card Content */
.lectureContent h3 {
  font-size: 1.1rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #ffffff;
}

.lectureContent p {
  font-size: 0.9rem;
  color: #cccccc;
  margin-bottom: 1rem;
  line-height: 1.5;
}

.lectureMeta {
  display: flex;
  gap: 1rem;
  font-size: 0.75rem;
  color: #888;
  margin-bottom: 1rem;
  flex-wrap: wrap;
}

.lectureMeta span {
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

/* Card Actions */
.lectureActions {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.playBtnCard {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: linear-gradient(135deg, #ffffff, #cccccc);
  border: none;
  color: #000;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
}

.playBtnCard:hover {
  transform: scale(1.1);
}

.waveformMini {
  flex: 1;
  height: 30px;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.3) 0%,
    rgba(255, 255, 255, 0.1) 50%,
    rgba(255, 255, 255, 0.3) 100%
  );
  border-radius: 4px;
  position: relative;
  overflow: hidden;
}

.waveformMini::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 80%;
  bottom: 0;
  background: rgba(0, 0, 0, 0.3);
}

/* Current Player */
.currentPlayer {
  background: rgba(255, 255, 255, 0.08);
  border: 1px solid rgba(255, 255, 255, 0.25);
  border-radius: 16px;
  padding: 2rem;
  margin-top: 2rem;
  animation: slideUp 0.5s ease;
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.playerHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.currentTechBadge {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 25px;
  font-weight: 600;
}

.currentTechBadge img {
  width: 20px;
  height: 20px;
}

.closePlayer {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  border: none;
  color: #ffffff;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
}

.closePlayer:hover {
  background: rgba(255, 255, 255, 0.2);
}

/* Player Content */
.playerContent h3 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #ffffff;
}

.playerContent p {
  color: #cccccc;
  margin-bottom: 1.5rem;
  line-height: 1.6;
}

/* Player Controls */
.playerControls {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1rem;
}

.playBtnMain {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background: linear-gradient(135deg, #ffffff, #cccccc);
  border: none;
  color: #000;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
}

.playBtnMain:hover {
  transform: scale(1.1);
}

.playerInfo {
  flex: 1;
}

.currentMeta {
  font-size: 0.9rem;
  color: #888;
  margin-bottom: 0.5rem;
}

.progressBar {
  width: 100%;
  height: 4px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
  overflow: hidden;
}

.progressFill {
  height: 100%;
  background: linear-gradient(90deg, #ffffff, #cccccc);
  width: 30%;
  border-radius: 2px;
}

.progressFill.playing {
  animation: progress 15s linear infinite;
}

/* Main Waveform */
.waveformMain {
  height: 80px;
  background: linear-gradient(90deg, #ffffff, #cccccc);
  border-radius: 8px;
  position: relative;
  overflow: hidden;
}

.waveformMain::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 70%;
  bottom: 0;
  background: rgba(0, 0, 0, 0.3);
}

.waveformMain.playing::after {
  animation: progress 15s linear infinite;
}

@keyframes progress {
  0% {
    right: 100%;
  }
  100% {
    right: 0%;
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .experienceSection {
    padding: 3rem 1rem;
  }

  .categoryFilter {
    gap: 0.5rem;
  }

  .categoryBtn {
    padding: 0.4rem 1rem;
    font-size: 0.8rem;
  }

  .carouselTrack {
    gap: 1rem;
  }

  .lectureCard {
    min-width: 280px;
    padding: 1rem;
  }

  .carouselBtn {
    width: 40px;
    height: 40px;
  }

  .prevBtn {
    left: 0.5rem;
  }

  .nextBtn {
    right: 0.5rem;
  }

  .playerControls {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }

  .playBtnMain {
    align-self: center;
  }

  .currentPlayer {
    padding: 1.5rem;
  }
}

@media (max-width: 480px) {
  .experienceSection {
    padding: 2rem 1rem;
  }

  .lectureCard {
    min-width: 250px;
  }

  .lectureMeta {
    flex-direction: column;
    gap: 0.5rem;
  }

  .categoryFilter {
    flex-direction: column;
    align-items: center;
  }

  .categoryBtn {
    min-width: 140px;
  }

  .header h2 {
    font-size: 1.5rem;
  }

  .header p {
    font-size: 1rem;
  }
}

/* Focus States for Accessibility */
.categoryBtn:focus,
.carouselBtn:focus,
.playBtnCard:focus,
.playBtnMain:focus,
.closePlayer:focus {
  outline: 2px solid rgba(255, 255, 255, 0.5);
  outline-offset: 2px;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .sectionBackground::before,
  .sectionBackground::after,
  .gridPattern,
  .particle,
  .currentPlayer,
  .progressFill.playing,
  .waveformMain.playing::after {
    animation: none;
  }

  .lectureCard:hover,
  .playBtnCard:hover,
  .playBtnMain:hover {
    transform: none;
  }
}
